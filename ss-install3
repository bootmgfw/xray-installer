#!/bin/bash
set -e

# Устанавливаем зависимости
apt update
apt install -y qrencode curl jq openssl shadowsocks-libev

# Настройки
PORT=443
METHOD="aes-256-gcm"

# Включаем BBR
bbr=$(sysctl -n net.ipv4.tcp_congestion_control 2>/dev/null || true)
if [ "$bbr" = "bbr" ]; then
  echo "bbr уже включен"
else
  echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
  sysctl -p
  echo "bbr включен"
fi

# Директории и файлы
mkdir -p /etc/shadowsocks
touch /etc/shadowsocks/.keys

# Базовый конфиг, если его нет
if [ ! -f /etc/shadowsocks/config.json ]; then
  cat << EOF > /etc/shadowsocks/config.json
{
  "server":"0.0.0.0",
  "server_port": $PORT,
  "password":"changeme",
  "timeout":300,
  "method":"$METHOD",
  "fast_open": false,
  "nameserver":"8.8.8.8",
  "mode":"tcp_and_udp"
}
EOF
fi

#########################
# userlist-ss
#########################
cat << 'EOF' > /usr/local/bin/userlist-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi
nl -ba /etc/shadowsocks/.keys
EOF
chmod +x /usr/local/bin/userlist-ss

#########################
# mainuser-ss
#########################
cat << 'EOF' > /usr/local/bin/mainuser-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi

line=$(head -n 1 /etc/shadowsocks/.keys)
if [ -z "$line" ]; then
  echo "Нет клиентов в .keys"
  exit 1
fi

email=$(echo "$line" | awk -F: '{print $1}')
port=$(echo "$line" | awk -F: '{print $2}')
password=$(echo "$line" | awk -F: '{print $3}')
method=$(jq -r '.method' /etc/shadowsocks/config.json)
ip=$(timeout 3 curl -4 -s icanhazip.com || echo "127.0.0.1")

b64=$(printf "%s:%s" "$method" "$password" | base64 | tr -d '=' | tr '/+' '_-')
link="ss://$b64@$ip:$port#$(printf "%s" "$email" | sed 's/ /%20/g')"

echo ""
echo "Ссылка для подключения:"
echo "$link"
echo ""
echo "QR-код:"
echo -n "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/mainuser-ss

#########################
# newuser-ss
#########################
cat << 'EOF' > /usr/local/bin/newuser-ss
#!/bin/bash
read -p "Введите имя пользователя (email): " email
if [[ -z "$email" || "$email" == *" "* ]]; then
  echo "Имя пользователя не может быть пустым или содержать пробелы."
  exit 1
fi

base_port=$(jq -r '.server_port' /etc/shadowsocks/config.json)
port=$base_port
while ss -ltn "( sport = :$port )" >/dev/null 2>&1; do
  port=$((port+1))
done

password=$(openssl rand -base64 18 | tr -d '=+/' | cut -c1-18)
echo "$email:$port:$password" >> /etc/shadowsocks/.keys

jq --arg p "$password" --argjson port "$port" '.server_port = $port | .password = $p' /etc/shadowsocks/config.json > /etc/shadowsocks/config.tmp && mv /etc/shadowsocks/config.tmp /etc/shadowsocks/config.json

systemctl restart shadowsocks-libev || systemctl restart shadowsocks-libev@config

ip=$(curl -4 -s icanhazip.com)
method=$(jq -r '.method' /etc/shadowsocks/config.json)
b64=$(printf "%s:%s" "$method" "$password" | base64 | tr -d '=' | tr '/+' '_-')
link="ss://$b64@$ip:$port#$(printf "%s" "$email" | sed 's/ /%20/g')"

echo ""
echo "Пользователь создан:"
echo "Email: $email"
echo "Port : $port"
echo "Pass : $password"
echo ""
echo "Ссылка:"
echo "$link"
echo ""
echo "QR:"
echo -n "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/newuser-ss

#########################
# rmuser-ss
#########################
cat << 'EOF' > /usr/local/bin/rmuser-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi

nl -ba /etc/shadowsocks/.keys
read -p "Введите номер строки для удаления: " num
if ! [[ "$num" =~ ^[0-9]+$ ]]; then
  echo "Неверный номер"
  exit 1
fi

total=$(wc -l < /etc/shadowsocks/.keys)
if (( num < 1 || num > total )); then
  echo "Номер вне диапазона"
  exit 1
fi

deleted=$(sed -n "${num}p" /etc/shadowsocks/.keys)
sed -i "${num}d" /etc/shadowsocks/.keys

if [ -s /etc/shadowsocks/.keys ]; then
  first=$(head -n1 /etc/shadowsocks/.keys)
  p=$(echo "$first" | awk -F: '{print $3}')
  port=$(echo "$first" | awk -F: '{print $2}')
  jq --arg p "$p" --argjson port "$port" '.server_port = $port | .password = $p' /etc/shadowsocks/config.json > /etc/shadowsocks/config.tmp && mv /etc/shadowsocks/config.tmp /etc/shadowsocks/config.json
else
  echo "Список клиентов пуст"
fi

systemctl restart shadowsocks-libev || systemctl restart shadowsocks-libev@config

echo "Удалено: $deleted"
EOF
chmod +x /usr/local/bin/rmuser-ss

#########################
# sharelink-ss
#########################
cat << 'EOF' > /usr/local/bin/sharelink-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi

nl -ba /etc/shadowsocks/.keys
read -p "Выберите номер клиента: " num
if ! [[ "$num" =~ ^[0-9]+$ ]]; then
  echo "Неверный номер"
  exit 1
fi

line=$(sed -n "${num}p" /etc/shadowsocks/.keys)
if [ -z "$line" ]; then
  echo "Строка пуста"
  exit 1
fi

email=$(echo "$line" | awk -F: '{print $1}')
port=$(echo "$line" | awk -F: '{print $2}')
password=$(echo "$line" | awk -F: '{print $3}')
method=$(jq -r '.method' /etc/shadowsocks/config.json)
ip=$(curl -4 -s icanhazip.com)
b64=$(printf "%s:%s" "$method" "$password" | base64 | tr -d '=' | tr '/+' '_-')
link="ss://$b64@$ip:$port#$(printf "%s" "$email" | sed 's/ /%20/g')"

echo ""
echo "Ссылка:"
echo "$link"
echo ""
echo "QR:"
echo -n "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/sharelink-ss

#########################
# Завершение
#########################
systemctl restart shadowsocks-libev || systemctl restart shadowsocks-libev@config

echo "Shadowsocks (libev) установлен и настроен."
echo "Команды:"
echo "  mainuser-ss   - показать ссылку и QR для первого клиента"
echo "  newuser-ss    - создать нового клиента"
echo "  rmuser-ss     - удалить клиента по номеру"
echo "  userlist-ss   - показать список клиентов"
echo "  sharelink-ss  - выбрать клиента и получить ссылку/QR"
echo ""
echo "Конфиг: /etc/shadowsocks/config.json"
echo "Ключи : /etc/shadowsocks/.keys"
