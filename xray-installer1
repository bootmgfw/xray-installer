#!/bin/bash

# Цвета для вывода
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${GREEN}=== Установка Xray с обходом блокировок ===${NC}"

apt update
apt install qrencode curl jq -y

# Включение BBR
bbr=$(sysctl -a | grep net.ipv4.tcp_congestion_control)
if [ "$bbr" = "net.ipv4.tcp_congestion_control = bbr" ]; then
    echo -e "${GREEN}BBR уже включен${NC}"
else
    echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
    echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
    sysctl -p
    echo -e "${GREEN}BBR включен${NC}"
fi

# Установка Xray
bash -c "$(curl -4 -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install

# Генерация ключей
[ -f /usr/local/etc/xray/.keys ] && rm /usr/local/etc/xray/.keys
touch /usr/local/etc/xray/.keys
echo "shortsid: $(openssl rand -hex 8)" >> /usr/local/etc/xray/.keys
echo "uuid: $(xray uuid)" >> /usr/local/etc/xray/.keys
xray x25519 >> /usr/local/etc/xray/.keys

export uuid=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/uuid/ {print $2}')
export privatkey=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/PrivateKey/ {print $2}')
export shortsid=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/shortsid/ {print $2}')

# Выбор SNI для обхода
echo -e "${YELLOW}Выберите SNI для обхода блокировок:${NC}"
echo "1) stats.vk-portal.net (МТС, МегаФон, Т2, Т-Мобайл, РТК, Yota)"
echo "2) login.vk.com (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "3) www.wildberries.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "4) www.ozon.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "5) goya.rutube.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "6) alfabank.ru (МТС, МегаФон, Т2, Yota)"
echo "7) sba.yandex.net (МТС, МегаФон)"
echo "8) ok.ru (МТС, МегаФон)"
echo "9) dzen.ru (МегаФон, Т2)"
echo "10) Ввести свой SNI"

read -p "Ваш выбор (1-10): " sni_choice

case $sni_choice in
    1) SNI="stats.vk-portal.net" ;;
    2) SNI="login.vk.com" ;;
    3) SNI="www.wildberries.ru" ;;
    4) SNI="www.ozon.ru" ;;
    5) SNI="goya.rutube.ru" ;;
    6) SNI="alfabank.ru" ;;
    7) SNI="sba.yandex.net" ;;
    8) SNI="ok.ru" ;;
    9) SNI="dzen.ru" ;;
    10) 
        read -p "Введите SNI: " SNI
        ;;
    *) 
        echo -e "${RED}Неверный выбор, используется stats.vk-portal.net${NC}"
        SNI="stats.vk-portal.net"
        ;;
esac

echo -e "${GREEN}Используется SNI: $SNI${NC}"

# Создание конфигурации
touch /usr/local/etc/xray/config.json
cat << EOF > /usr/local/etc/xray/config.json
{
    "log": {
        "loglevel": "warning"
    },
    "routing": {
        "domainStrategy": "IPIfNonMatch",
        "rules": [
            {
                "type": "field",
                "domain": [
                    "geosite:category-ads-all"
                ],
                "outboundTag": "block"
            }
        ]
    },
    "inbounds": [
        {
            "listen": "0.0.0.0",
            "port": 443,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "email": "main",
                        "id": "$uuid",
                        "flow": "xtls-rprx-vision"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "tcp",
                "security": "reality",
                "realitySettings": {
                    "show": false,
                    "dest": "$SNI:443",
                    "xver": 0,
                    "serverNames": [
                        "$SNI"
                    ],
                    "privateKey": "$privatkey",
                    "minClientVer": "",
                    "maxClientVer": "",
                    "maxTimeDiff": 0,
                    "shortIds": [
                        "$shortsid"
                    ]
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "freedom",
            "tag": "direct"
        },
        {
            "protocol": "blackhole",
            "tag": "block"
        }
    ],
    "policy": {
        "levels": {
            "0": {
                "handshake": 3,
                "connIdle": 180
            }
        }
    }
}
EOF

# Скрипт для смены SNI
touch /usr/local/bin/changesni
cat << 'EOFSCRIPT' > /usr/local/bin/changesni
#!/bin/bash
echo "Популярные SNI для обхода:"
echo "1) stats.vk-portal.net (МТС, МегаФон, Т2, Т-Мобайл, РТК, Yota)"
echo "2) login.vk.com (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "3) www.wildberries.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "4) www.ozon.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "5) goya.rutube.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК)"
echo "6) alfabank.ru (МТС, МегаФон, Т2, Yota)"
echo "7) st.ozone.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК, Yota)"
echo "8) www.kinopoisk.ru (МТС, МегаФон, Т2, Т-Мобайл, РТК, Yota)"
echo "9) Ввести свой SNI"

read -p "Ваш выбор: " choice

case $choice in
    1) NEW_SNI="stats.vk-portal.net" ;;
    2) NEW_SNI="login.vk.com" ;;
    3) NEW_SNI="www.wildberries.ru" ;;
    4) NEW_SNI="www.ozon.ru" ;;
    5) NEW_SNI="goya.rutube.ru" ;;
    6) NEW_SNI="alfabank.ru" ;;
    7) NEW_SNI="st.ozone.ru" ;;
    8) NEW_SNI="www.kinopoisk.ru" ;;
    9) read -p "Введите SNI: " NEW_SNI ;;
    *) echo "Неверный выбор"; exit 1 ;;
esac

jq --arg sni "$NEW_SNI" \
   '.inbounds[0].streamSettings.realitySettings.dest = ($sni + ":443") | 
    .inbounds[0].streamSettings.realitySettings.serverNames = [$sni]' \
   /usr/local/etc/xray/config.json > tmp.json && mv tmp.json /usr/local/etc/xray/config.json

systemctl restart xray
echo "SNI изменен на: $NEW_SNI"
echo "Не забудьте обновить ссылки для клиентов!"
EOFSCRIPT
chmod +x /usr/local/bin/changesni

# Остальные скрипты управления
touch /usr/local/bin/userlist
cat << 'EOF' > /usr/local/bin/userlist
#!/bin/bash
emails=($(jq -r '.inbounds[0].settings.clients[].email' "/usr/local/etc/xray/config.json"))

if [[ ${#emails[@]} -eq 0 ]]; then
    echo "Список клиентов пуст"
    exit 1
fi

echo "Список клиентов:"
for i in "${!emails[@]}"; do
    echo "$((i+1)). ${emails[$i]}"
done
EOF
chmod +x /usr/local/bin/userlist

touch /usr/local/bin/mainuser
cat << 'EOF' > /usr/local/bin/mainuser
#!/bin/bash
protocol=$(jq -r '.inbounds[0].protocol' /usr/local/etc/xray/config.json)
port=$(jq -r '.inbounds[0].port' /usr/local/etc/xray/config.json)
uuid=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/uuid/ {print $2}')
pbk=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/Password/ {print $2}')
sid=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/shortsid/ {print $2}')
sni=$(jq -r '.inbounds[0].streamSettings.realitySettings.serverNames[0]' /usr/local/etc/xray/config.json)
ip=$(timeout 3 curl -4 -s icanhazip.com)
link="$protocol://$uuid@$ip:$port?security=reality&sni=$sni&fp=firefox&pbk=$pbk&sid=$sid&spx=/&type=tcp&flow=xtls-rprx-vision&encryption=none#vless-$ip"
echo ""
echo "Ссылка для подключения:"
echo "$link"
echo ""
echo "QR-код:"
echo ${link} | qrencode -t ansiutf8
echo ""
echo "Текущий SNI: $sni"
EOF
chmod +x /usr/local/bin/mainuser

touch /usr/local/bin/newuser
cat << 'EOF' > /usr/local/bin/newuser
#!/bin/bash
read -p "Введите имя пользователя (email): " email

if [[ -z "$email" || "$email" == *" "* ]]; then
    echo "Имя не может быть пустым или содержать пробелы"
    exit 1
fi

user_json=$(jq --arg email "$email" '.inbounds[0].settings.clients[] | select(.email == $email)' /usr/local/etc/xray/config.json)

if [[ -z "$user_json" ]]; then
uuid=$(xray uuid)
jq --arg email "$email" --arg uuid "$uuid" '.inbounds[0].settings.clients += [{"email": $email, "id": $uuid, "flow": "xtls-rprx-vision"}]' /usr/local/etc/xray/config.json > tmp.json && mv tmp.json /usr/local/etc/xray/config.json
systemctl restart xray
index=$(jq --arg email "$email" '.inbounds[0].settings.clients | to_entries[] | select(.value.email == $email) | .key'  /usr/local/etc/xray/config.json)
protocol=$(jq -r '.inbounds[0].protocol' /usr/local/etc/xray/config.json)
port=$(jq -r '.inbounds[0].port' /usr/local/etc/xray/config.json)
uuid=$(jq --argjson index "$index" -r '.inbounds[0].settings.clients[$index].id' /usr/local/etc/xray/config.json)
pbk=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/Password/ {print $2}')
sid=$(cat /usr/local/etc/xray/.keys | awk -F': ' '/shortsid/ {print $2}')
username=$(jq --argjson index "$index" -r '.inbounds[0].settings.clients[$index].email' /usr/local/etc/xray/config.json)
sni=$(jq -r '.inbounds[0].streamSettings.realitySettings.serverNames[0]' /usr/local/etc/xray/config.json)
ip=$(curl -4 -s icanhazip.com)
link="$protocol://$uuid@$ip:$port?security=reality&sni=$sni&fp=firefox&pbk=$pbk&sid=$sid&spx=/&type=tcp&flow=xtls-rprx-vision&encryption=none#$username"
echo ""
echo "Ссылка для подключения:"
echo "$link"
echo ""
echo "QR-код:"
echo ${link} | qrencode -t ansiutf8
else
echo "Пользователь с таким именем уже существует"
fi
EOF
chmod +x /usr/local/bin/newuser

touch /usr/local/bin/rmuser
cat << 'EOF' > /usr/local/bin/rmuser
#!/bin/bash
emails=($(jq -r '.inbounds[0].settings.clients[].email' "/usr/local/etc/xray/config.json"))

if [[ ${#emails[@]} -eq 0 ]]; then
    echo "Нет клиентов для удаления"
    exit 1
fi

echo "Список клиентов:"
for i in "${!emails[@]}"; do
    echo "$((i+1)). ${emails[$i]}"
done

read -p "Введите номер клиента для удаления: " choice

if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 1 || choice > ${#emails[@]} )); then
    echo "Ошибка: номер должен быть от 1 до ${#emails[@]}"
    exit 1
fi

selected_email="${emails[$((choice - 1))]}"

jq --arg email "$selected_email" \
   '(.inbounds[0].settings.clients) |= map(select(.email != $email))' \
   "/usr/local/etc/xray/config.json" > tmp && mv tmp "/usr/local/etc/xray/config.json"

systemctl restart xray

echo "Клиент $selected_email удален"
EOF
chmod +x /usr/local/bin/rmuser

touch /usr/local/bin/sharelink
cat << 'EOF' > /usr/local/bin/sharelink
#!/bin/bash
emails=($(jq -r '.inbounds[0].settings.clients[].email' /usr/local/etc/xray/config.json))

for i in "${!emails[@]}"; do
   echo "$((i + 1)). ${emails[$i]}"
done

read -p "Выберите клиента: " client

if ! [[ "$client" =~ ^[0-9]+$ ]] || (( client < 1 || client > ${#emails[@]} )); then
    echo "
