#!/bin/bash
set -e

# Устанавливаем зависимости
apt update
apt install -y qrencode curl jq openssl

# Выбираем порт и шифр (при необходимости изменить)
PORT=443
METHOD="aes-256-gcm"

# Включаем BBR (как в оригинале)
bbr=$(sysctl -n net.ipv4.tcp_congestion_control 2>/dev/null || true)
if [ "$bbr" = "bbr" ]; then
  echo "bbr уже включен"
else
  echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
  sysctl -p
  echo "bbr включен"
fi

# Устанавливаем shadowsocks-libev
if ! command -v ss-server >/dev/null 2>&1; then
  apt install -y shadowsocks-libev
fi

# Создаем папку и .keys
mkdir -p /etc/shadowsocks
touch /etc/shadowsocks/.keys

# Функция генерации пароля
generate_password() {
  # 18 символов base64-ish
  openssl rand -base64 18 | tr -d '=+/\' | cut -c1-18
}

# Если конфиг не существует — создаём пустой шаблон
if [ ! -f /etc/shadowsocks/config.json ]; then
  cat << EOF > /etc/shadowsocks/config.json
{
  "server":"0.0.0.0",
  "server_port": $PORT,
  "password":"changeme",
  "timeout":300,
  "method":"$METHOD",
  "fast_open": false,
  "nameserver":"8.8.8.8",
  "mode":"tcp_and_udp"
}
EOF
fi

# Утилка: вывод списка пользователей (emails храним как email:port:password в .keys)
cat << 'EOF' > /usr/local/bin/userlist-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi
nl -ba /etc/shadowsocks/.keys
EOF
chmod +x /usr/local/bin/userlist-ss

# Утилка: ссылка основного пользователя (первые строки .keys)
cat << 'EOF' > /usr/local/bin/mainuser-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi

line=\$(head -n1 /etc/shadowsocks/.keys)
if [ -z "\$line" ]; then
  echo "Нет клиентов в .keys"
  exit 1
fi

email=\$(echo "\$line" | awk -F: '{print \$1}')
port=\$(echo "\$line" | awk -F: '{print \$2}')
password=\$(echo "\$line" | awk -F: '{print \$3}')
method=\$(jq -r '.method' /etc/shadowsocks/config.json)
ip=\$(timeout 3 curl -4 -s icanhazip.com || echo "127.0.0.1")

# Формируем ss ссылку: ss://BASE64(method:password)@ip:port#name
b64=\$(printf "%s:%s" "\$method" "\$password" | base64 | tr -d '=' | tr '/+' '_-')
link="ss://\$b64@\${ip}:\${port}#\$(printf "%s" "\$email" | sed 's/ /%20/g')"

echo ""
echo "Ссылка для подключения:"
echo "\$link"
echo ""
echo "QR-код:"
echo -n "\$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/mainuser-ss

# Утилка: создать нового пользователя
cat << 'EOF' > /usr/local/bin/newuser-ss
#!/bin/bash
read -p "Введите имя пользователя (email): " email
if [[ -z "$email" || "$email" == *" "* ]]; then
  echo "Имя пользователя не может быть пустым или содержать пробелы."
  exit 1
fi

# выбираем свободный порт (если порт занят — увеличиваем)
base_port=\$(jq -r '.server_port' /etc/shadowsocks/config.json)
if ! ss -ltn "( sport = :\$base_port )" >/dev/null 2>&1; then
  port=\$base_port
else
  # ищем первый свободный порт > base_port
  port=\$((base_port+1))
  while ss -ltn "( sport = :\$port )" >/dev/null 2>&1; do
    port=\$((port+1))
  done
fi

password=\$(openssl rand -base64 18 | tr -d '=+/\' | cut -c1-18)
echo "\$email:\$port:\$password" >> /etc/shadowsocks/.keys

# Обновляем конфиг (если это первый клиент — меняем порт и пароль в основ. конфиге;
# при мультиклиентах можно запускать отдельные инстансы или использовать manager)
jq --arg p "\$password" --argjson port "\$port" '.server_port = $port | .password = $p' /etc/shadowsocks/config.json > /etc/shadowsocks/config.tmp && mv /etc/shadowsocks/config.tmp /etc/shadowsocks/config.json

# перезапуск сервиса (один инстанс shadowsocks-libev использует значение из /etc/shadowsocks/config.json)
systemctl restart shadowsocks-libev || systemctl restart shadowsocks-libev@config

ip=\$(curl -4 -s icanhazip.com)
method=\$(jq -r '.method' /etc/shadowsocks/config.json)
b64=\$(printf "%s:%s" "\$method" "\$password" | base64 | tr -d '=' | tr '/+' '_-')
link="ss://\$b64@\${ip}:\${port}#\$(printf "%s" "\$email" | sed 's/ /%20/g')"

echo ""
echo "Пользователь создан:"
echo "Email: \$email"
echo "Port : \$port"
echo "Pass : \$password"
echo ""
echo "Ссылка:"
echo "\$link"
echo ""
echo "QR:"
echo -n "\$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/newuser-ss

# Утилка: удалить пользователя по номеру
cat << 'EOF' > /usr/local/bin/rmuser-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi

nl -ba /etc/shadowsocks/.keys
read -p "Введите номер строки для удаления: " num
if ! [[ "$num" =~ ^[0-9]+$ ]]; then
  echo "Неверный номер"
  exit 1
fi

total=\$(wc -l < /etc/shadowsocks/.keys)
if (( num < 1 || num > total )); then
  echo "Номер вне диапазона"
  exit 1
fi

deleted=\$(sed -n "${num}p" /etc/shadowsocks/.keys)
sed -i "${num}d" /etc/shadowsocks/.keys

# Если удалили первую строку — обновим конфиг под новую первую строку (если есть)
if [ -s /etc/shadowsocks/.keys ]; then
  first=\$(head -n1 /etc/shadowsocks/.keys)
  p=\$(echo "\$first" | awk -F: '{print \$3}')
  port=\$(echo "\$first" | awk -F: '{print \$2}')
  jq --arg p "\$p" --argjson port "\$port" '.server_port = $port | .password = $p' /etc/shadowsocks/config.json > /etc/shadowsocks/config.tmp && mv /etc/shadowsocks/config.tmp /etc/shadowsocks/config.json
else
  # нет клиентов — оставляем текущий конфиг, но можно сбросить пароль
  echo "Список клиентов пуст"
fi

systemctl restart shadowsocks-libev || systemctl restart shadowsocks-libev@config

echo "Удалено: \$deleted"
EOF
chmod +x /usr/local/bin/rmuser-ss

# Утилка: sharelink (выбор клиента и генерация ссылки)
cat << 'EOF' > /usr/local/bin/sharelink-ss
#!/bin/bash
if [ ! -f /etc/shadowsocks/.keys ]; then
  echo "Нет клиентов"
  exit 1
fi

nl -ba /etc/shadowsocks/.keys
read -p "Выберите номер клиента: " num

if ! [[ "$num" =~ ^[0-9]+$ ]]; then
  echo "Неверный номер"
  exit 1
fi

line=\$(sed -n "${num}p" /etc/shadowsocks/.keys)
if [ -z "\$line" ]; then
  echo "Строка пуста"
  exit 1
fi

email=\$(echo "\$line" | awk -F: '{print \$1}')
port=\$(echo "\$line" | awk -F: '{print \$2}')
password=\$(echo "\$line" | awk -F: '{print \$3}')
method=\$(jq -r '.method' /etc/shadowsocks/config.json)
ip=\$(curl -4 -s icanhazip.com)
b64=\$(printf "%s:%s" "\$method" "\$password" | base64 | tr -d '=' | tr '/+' '_-')
link="ss://\$b64@\${ip}:\${port}#\$(printf "%s" "\$email" | sed 's/ /%20/g')"

echo ""
echo "Ссылка:"
echo "\$link"
echo ""
echo "QR:"
echo -n "\$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/sharelink-ss

# Перезапускаем shadowsocks-libev (systemd unit reads /etc/shadowsocks/config.json under the name 'shadowsocks-libev')
# On Debian/Ubuntu the unit may be shadowsocks-libev.service or shadowsocks-libev@config.service
systemctl restart shadowsocks-libev || true
if ! systemctl is-active --quiet shadowsocks-libev; then
  # try config instance
  systemctl restart shadowsocks-libev@config || true
fi

echo "Shadowsocks (libev) успешно установлен и настроен."
echo "Команды:"
echo "  mainuser-ss   - показать ссылку и QR для первого клиента"
echo "  newuser-ss    - создать нового клиента"
echo "  rmuser-ss     - удалить клиента по номеру"
echo "  userlist-ss   - показать список клиентов"
echo "  sharelink-ss  - выбрать клиента и получить ссылку/QR"
echo ""
echo "Файл конфигурации: /etc/shadowsocks/config.json"
echo "Файл с клиентами      : /etc/shadowsocks/.keys"
